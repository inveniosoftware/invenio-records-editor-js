{
  "$schema": "http://json-schema.org/schema#",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "format": "url",
      "type": "string"
    },
    "_collections": {
      "description": "Used by `invenio-collections` to store the collections this record\nbelongs to.\n\n.. note::\n\n    This field is maintained by `invenio-collections` and should\n    not be edited manually.",
      "items": {
        "type": "string"
      },
      "title": "`invenio-collections` metadata",
      "type": "array"
    },
    "_desy_bookkeeping": {
      "description": ":MARC: ``595_D``\n\nUsed by DESY to store information about the keyword-assignment\nprocess.",
      "items": {
        "additionalProperties": false,
        "properties": {
          "date": {
            "description": ":MARC: ``595_Dd``",
            "type": "string"
          },
          "expert": {
            "description": ":MARC: ``595_Da``",
            "type": "string"
          },
          "status": {
            "description": ":MARC: ``595_Ds``",
            "type": "string"
          }
        },
        "type": "object"
      },
      "title": "DESY keywording information",
      "type": "array"
    },
    "_export_to": {
      "additionalProperties": false,
      "description": ":MARC: ``595__c``\n\nFlags determining to which foreign databases this record should be\nautomatically exported.  Setting one of the keys to ``true`` means\nthat the record must be exported to the corresponding system,\nsetting it to ``false`` means that it must not be exported.",
      "properties": {
        "CDS": {
          "description": "Controls automatic export to the `CERN Document Server\n<http://cds.cern.ch>`_.",
          "type": "boolean"
        },
        "HAL": {
          "description": "Controls automatic export to `HAL\n<https://hal.archives-ouvertes.fr/>`_, the French national\nrepository.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "_fft": {
      "description": "Used to communicate with legacy about files (to be) attached to the\nrecord.",
      "items": {
        "additionalProperties": false,
        "properties": {
          "comment": {
            "type": "string"
          },
          "creation_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "flags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "format": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "title": "List of legacy FFTs",
      "type": "array"
    },
    "_files": {
      "description": "Used by `invenio-records-files` to store information about the\nfiles attached to this record.\n\n.. note::\n\n    This field is maintained by `invenio-records-files` and should\n    not be edited manually.",
      "items": {
        "description": "Describe information needed for files in records.",
        "properties": {
          "bucket": {
            "type": "string"
          },
          "checksum": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "previewer": {
            "description": "Identifier for previewer needed to preview this file.",
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "type": {
            "description": "File type extension.",
            "type": "string"
          },
          "version_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "title": "`invenio-records-files` metadata",
      "type": "array"
    },
    "_private_notes": {
      "description": ":MARC: ``595``\n\nThese notes are only visible to privileged users, not regular\nusers.",
      "items": {
        "additionalProperties": false,
        "description": "This is used to add, besides the `value`, the `source` where this value\ncame from.",
        "properties": {
          "source": {
            "$schema": "http://json-schema.org/schema#",
            "description": "Source of the information in this field. As several records can be merged,\nthis information allows us to remember where every bit of metadata came\nfrom and make decisions based on it.\n\n:MARC: Often not present.",
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["value"],
        "type": "object"
      },
      "title": "List of private notes",
      "type": "array",
      "uniqueItems": true
    },
    "abstracts": {
      "description": ":MARC: ``520``",
      "items": {
        "additionalProperties": false,
        "description": "This is used to add, besides the `value`, the `source` where this value\ncame from.",
        "properties": {
          "source": {
            "$schema": "http://json-schema.org/schema#",
            "description": "Source of the information in this field. As several records can be merged,\nthis information allows us to remember where every bit of metadata came\nfrom and make decisions based on it.\n\n:MARC: Often not present.",
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["value"],
        "type": "object"
      },
      "title": "List of abstracts",
      "type": "array",
      "uniqueItems": true
    },
    "accelerator_experiments": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "accelerator": {
            "description": ":MARC: ``693__a``\n\nIf present, :ref:`institution` should contain the\ninstitution where this accelerator is located.\n\n.. note::\n\n    Currently not used, see :ref:`legacy_name`.",
            "type": "string"
          },
          "curated_relation": {
            "default": false,
            "type": "boolean"
          },
          "experiment": {
            "description": ":MARC: not present.\n\nIf present, :ref:`institution` should contain the\ninstitution where this experiment is located and\n:ref:`accelerator` may contain the accelerator that this\nexperiment is using (if appropriate).\n\n.. note::\n\n    Currently not used, see :ref:`legacy_name`.",
            "type": "string"
          },
          "institution": {
            "description": ":MARC: not present.\n\n.. note::\n\n    Currently not used, see :ref:`legacy_name`.",
            "title": "Institution hosting the experiment",
            "type": "string"
          },
          "legacy_name": {
            "description": ":MARC: ``693__e``\n\nThis field is used when migrating from legacy instead\nof separate :ref:`institution`, :ref:`accelerator` and\n:ref:`experiment`. In the future, it will be deprecated and\nthe other fields will be used instead.\n\n:example: ``CERN-LHC-CMS``",
            "title": "Identifier of the experiment on legacy",
            "type": "string"
          },
          "record": {
            "$schema": "http://json-schema.org/schema#",
            "additionalProperties": false,
            "properties": {
              "$ref": {
                "description": "URL to the referenced resource",
                "format": "url",
                "type": "string"
              }
            },
            "required": ["$ref"],
            "title": "Reference to another record",
            "type": "object"
          }
        },
        "type": "object"
      },
      "title": "List of related accelerators/experiments",
      "type": "array",
      "uniqueItems": true
    },
    "acquisition_source": {
      "$schema": "http://json-schema.org/schema#",
      "additionalProperties": false,
      "description": ":MARC: ``541``\n\nOnly the first source is stored: if the record later gets enriched with\nmetadata coming from a second source, the `acquisition_source` is not\nupdated.",
      "properties": {
        "datetime": {
          "description": ":MARC: ``541__d``\n\nThis does not necessarily coincide with the creation date of the\nrecord, as there might be some delay between the moment the\noriginal information is obtained and a record is finally created in\nthe system.",
          "format": "date-time",
          "title": "Date on which the metadata was obtained",
          "type": "string"
        },
        "email": {
          "description": ":MARC: ``541__b``\n\nThis only gets populated when `method` is `submitter`.",
          "format": "email",
          "title": "Email address associated to the submitter's account",
          "type": "string"
        },
        "internal_uid": {
          "description": ":MARC: ``541__a`` with ``inspire:uid:`` prefix.\n\nThis only gets populated when `method` is `submitter`.",
          "title": "Inspire user ID of the submitter",
          "type": "integer"
        },
        "method": {
          "description": "Possible values are:\n\n`submitter`\n    when obtained from a user submission. In this case, `orcid`,\n    `internal_uid` and `email` store identifiers of the submitter,\n    and `submission_number` an ID of the submission.\n\n`oai`\n    when obtained by OAI-PMH harvesting.\n\n`batchuploader`\n    when obtained through the batch uploader.\n\n`hepcrawl`\n    when obtained from a hepcrawl crawler. In this case, `source`\n    stores the publisher or the repository that was crawled.",
          "enum": ["submitter", "oai", "batchuploader", "hepcrawl"],
          "title": "How the medata was obtained",
          "type": "string"
        },
        "orcid": {
          "description": ":MARC: ``541__a`` with ``orcid:`` prefix\n\nThis only gets populated when `method` is `submitter`.",
          "pattern": "^\\d{4}-\\d{4}-\\d{4}-\\d{3}[0-9X]$",
          "title": "ORCID of the submitter",
          "type": "string"
        },
        "source": {
          "$schema": "http://json-schema.org/schema#",
          "description": "Source of the information in this field. As several records can be merged,\nthis information allows us to remember where every bit of metadata came\nfrom and make decisions based on it.\n\n:MARC: Often not present.",
          "type": "string"
        },
        "submission_number": {
          "description": ":MARC: ``541__e``\n\nThis only gets populated when `method` is `submitter`.",
          "title": "Holding pen record ID of the submission",
          "type": "string"
        }
      },
      "title": "Origin of the metadata in the record",
      "type": "object"
    },
    "arxiv_eprints": {
      "items": {
        "additionalProperties": false,
        "description": "Contains metadata of an arXiv eprint contained in this record.\n\n.. note::\n\n    This metadata is copied over from arXiv and should not be\n    edited manually.",
        "properties": {
          "categories": {
            "description": ":MARC: first category in ``037__c`` with ``9:arXiv``,\n    all categories in ``65017a`` with ``2:arXiv``\n\nThe first category in the list has a special meaning:\nit is the primary category of the eprint on arXiv.",
            "items": {
              "$schema": "http://json-schema.org/schema#",
              "description": "A category that currently exists on arXiv. Note that some categories have\nbeen renamed and are not in this list.  These are taken from the `arXiv API\ndocumentation\n<https://arxiv.org/help/api/user-manual#subject_classifications>`_.\n\n:example: ``math.FA`` instead of its previous name, ``funct-an``",
              "enum": [
                "alg-geom",
                "astro-ph",
                "astro-ph.CO",
                "astro-ph.EP",
                "astro-ph.GA",
                "astro-ph.HE",
                "astro-ph.IM",
                "astro-ph.SR",
                "cond-mat",
                "cond-mat.dis-nn",
                "cond-mat.mes-hall",
                "cond-mat.mtrl-sci",
                "cond-mat.other",
                "cond-mat.quant-gas",
                "cond-mat.soft",
                "cond-mat.stat-mech",
                "cond-mat.str-el",
                "cond-mat.supr-con",
                "cs",
                "cs.AI",
                "cs.AR",
                "cs.CC",
                "cs.CE",
                "cs.CG",
                "cs.CL",
                "cs.CR",
                "cs.CV",
                "cs.CY",
                "cs.DB",
                "cs.DC",
                "cs.DL",
                "cs.DM",
                "cs.DS",
                "cs.ET",
                "cs.FL",
                "cs.GL",
                "cs.GR",
                "cs.GT",
                "cs.HC",
                "cs.IR",
                "cs.IT",
                "cs.LG",
                "cs.LO",
                "cs.MA",
                "cs.MM",
                "cs.MS",
                "cs.NA",
                "cs.NE",
                "cs.NI",
                "cs.OH",
                "cs.OS",
                "cs.PF",
                "cs.PL",
                "cs.RO",
                "cs.SC",
                "cs.SD",
                "cs.SE",
                "cs.SI",
                "cs.SY",
                "dg-ga",
                "gr-qc",
                "hep-ex",
                "hep-lat",
                "hep-ph",
                "hep-th",
                "math",
                "math-ph",
                "math.AC",
                "math.AG",
                "math.AP",
                "math.AT",
                "math.CA",
                "math.CO",
                "math.CT",
                "math.CV",
                "math.DG",
                "math.DS",
                "math.FA",
                "math.GM",
                "math.GN",
                "math.GR",
                "math.GT",
                "math.HO",
                "math.IT",
                "math.KT",
                "math.LO",
                "math.MG",
                "math.MP",
                "math.NA",
                "math.NT",
                "math.OA",
                "math.OC",
                "math.PR",
                "math.QA",
                "math.RA",
                "math.RT",
                "math.SG",
                "math.SP",
                "math.ST",
                "nlin",
                "nlin.AO",
                "nlin.CD",
                "nlin.CG",
                "nlin.PS",
                "nlin.SI",
                "nucl-ex",
                "nucl-th",
                "patt-sol",
                "physics",
                "physics.acc-ph",
                "physics.ao-ph",
                "physics.atm-clus",
                "physics.atom-ph",
                "physics.bio-ph",
                "physics.chem-ph",
                "physics.class-ph",
                "physics.comp-ph",
                "physics.data-an",
                "physics.ed-ph",
                "physics.flu-dyn",
                "physics.gen-ph",
                "physics.geo-ph",
                "physics.hist-ph",
                "physics.ins-det",
                "physics.med-ph",
                "physics.optics",
                "physics.plasm-ph",
                "physics.pop-ph",
                "physics.soc-ph",
                "physics.space-ph",
                "q-alg",
                "q-bio",
                "q-bio.BM",
                "q-bio.CB",
                "q-bio.GN",
                "q-bio.MN",
                "q-bio.NC",
                "q-bio.OT",
                "q-bio.PE",
                "q-bio.QM",
                "q-bio.SC",
                "q-bio.TO",
                "q-fin",
                "q-fin.CP",
                "q-fin.EC",
                "q-fin.GN",
                "q-fin.MF",
                "q-fin.PM",
                "q-fin.PR",
                "q-fin.RM",
                "q-fin.ST",
                "q-fin.TR",
                "quant-ph",
                "solv-int",
                "stat",
                "stat.AP",
                "stat.CO",
                "stat.ME",
                "stat.ML",
                "stat.OT",
                "stat.TH"
              ],
              "type": "string"
            },
            "minItems": 1,
            "title": "arXiv categories of the eprint",
            "type": "array",
            "uniqueItems": true
          },
          "value": {
            "description": ":MARC: ``037__a`` with ``9:arXiv``\n:example: ``math.DG/0307245``\n:example: ``1701.01431``",
            "pattern": "^\\d{4}.\\d{4,5}|[\\w.]+(-[\\w.]+)?/\\d+$",
            "title": "arXiv eprint identifier",
            "type": "string"
          }
        },
        "required": ["categories", "value"],
        "title": "arXiv metadata",
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "authors": {
      "description": ":MARC: ``100``, ``700`` and ``701``\n\nBesides authors, also contains editors and supervisors (see\n:ref:`hep.json#/properties/authors/items/properties/inspire_roles`).",
      "items": {
        "additionalProperties": false,
        "properties": {
          "affiliations": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "curated_relation": {
                  "type": "boolean"
                },
                "record": {
                  "$schema": "http://json-schema.org/schema#",
                  "additionalProperties": false,
                  "properties": {
                    "$ref": {
                      "description": "URL to the referenced resource",
                      "format": "url",
                      "type": "string"
                    }
                  },
                  "required": ["$ref"],
                  "title": "Reference to another record",
                  "type": "object"
                },
                "value": {
                  "description": ":MARC: ``100/700/701__u``\n\nCurrently, the old\n:ref:`institutions.json#/properties/legacy_ICN`\nis used here. In the future, this will\nchange and become the new\n:ref:`institutions.json#/properties/ICN`.",
                  "title": "ICN of affiliation",
                  "type": "string"
                }
              },
              "required": ["value"],
              "type": "object"
            },
            "type": "array",
            "uniqueItems": true
          },
          "alternative_names": {
            "items": {
              "description": ":MARC: ``100/700/701__q``\n:example: ``楼 立洋``\n:example: ``Smith, Joe John``",
              "type": "string"
            },
            "type": "array"
          },
          "credit_roles": {
            "items": {
              "description": ":MARC: not present.\n\nRole of the author according to the `Contributor\nRoles Taxonomy (CRediT)\n<http://dictionary.casrai.org/Contributor_Roles>`_",
              "enum": [
                "Conceptualization",
                "Data curation",
                "Formal analysis",
                "Funding acquisition",
                "Investigation",
                "Methodology",
                "Project administration",
                "Resources",
                "Software",
                "Supervision",
                "Validation",
                "Visualization",
                "Writing - original draft",
                "Writing - review & editing"
              ],
              "title": "CRedit role of author",
              "type": "string"
            },
            "type": "array"
          },
          "curated_relation": {
            "default": false,
            "type": "boolean"
          },
          "emails": {
            "description": ":MARC: ``100/700/701__m``",
            "items": {
              "format": "email",
              "type": "string"
            },
            "type": "array"
          },
          "full_name": {
            "description": ":MARC: ``100/700/701__a``\n\nAuthor name in Latin alphabet (may contain diacritics).\nShould be of the form 'family names, first names', and,\nexcept for a possible reordering, be exactly as on the\npaper.\n\n:example: ``Smith Davis, John F.K.``",
            "title": "Author name",
            "type": "string"
          },
          "ids": {
            "description": ":MARC: ``100/700/701__i/j``",
            "items": {
              "$schema": "http://json-schema.org/schema#",
              "anyOf": [
                {
                  "additionalProperties": false,
                  "description": "This identifier is assigned to any curated author record (HEPNAMES on\nlegacy).  It is mainly used by large collaborations (providing an\n`authors.xml` file) to uniquely identify the authors of their articles.",
                  "properties": {
                    "schema": {
                      "enum": ["INSPIRE ID"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``INSPIRE-12345678``",
                      "pattern": "^INSPIRE-\\d{8}$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "Inspire ID",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "description": "The BAI (BibAuthorID) is based on the name of the author and is used as\na human-friendly unique identifier. Its general form is a\n``firstnames.lastnames.number``, where ``firstnames`` is a list of\nfirst names (or initials) separated by dots, and similarly for\n``lastnames``. Only ASCII letters (without diacritics), numbers, dashes\nand apostrophes are allowed in the names. By default, only initials of\nfirst names are used, but this may be changed at a cataloguer's\ndiscretion in order to disambiguate otherwise homonymous authors.\n\n.. note::\n\n    This identifier is not persistent, as it can be renamed to become\n    more explicit (e.g. transforming an initial into a full name), or\n    disappear when merging two different authors.",
                  "properties": {
                    "schema": {
                      "enum": ["INSPIRE BAI"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``A.Einstein.1``",
                      "pattern": "^((\\w|\\-|\\')+\\.)+\\d+$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "Inspire BAI",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "description": "`ORCID <http://orcid.org>`_ provides an identifier for individuals to\nuse with their name as they engage in research, scholarship, and\ninnovation activities.\n\nThe ORCID identifier can be resolved by prepending ``http://orcid.org``\nto the `value`, in order to get the ORCID record of the person.",
                  "properties": {
                    "schema": {
                      "enum": ["ORCID"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``0000-0012-1234-5647``",
                      "pattern": "^\\d{4}-\\d{4}-\\d{4}-\\d{3}[0-9X]$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "ORCID",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "description": "Author identfier assigned by the Joint Accelerator Conferences Website\n(`JACoW <http://jacow.org>`_).",
                  "properties": {
                    "schema": {
                      "enum": ["JACOW"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``JACOW-12345678``",
                      "pattern": "^JACoW-\\d{8}$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "JACoW ID",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "description": "Author identifier assigned by the Japanese `KAKEN\n<http://kaken.nii.ac.jp>`_ grants database.",
                  "properties": {
                    "schema": {
                      "enum": ["KAKEN"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``KAKEN-12345678``",
                      "pattern": "^KAKEN-\\d{8}$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "KAKEN ID",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "description": "More info at `arXiv <https://arxiv.org/help/author_identifiers>`_.",
                  "properties": {
                    "schema": {
                      "enum": ["ARXIV"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``warner_s_1``",
                      "pattern": "^\\w+_(\\w_)?\\d+$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "arXiv author identifier",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "description": "Also called CCID (e.g. on legacy).",
                  "properties": {
                    "schema": {
                      "enum": ["CERN"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``CERN-12345``",
                      "pattern": "^CERN-\\d+$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "CERN institutional ID",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "schema": {
                      "enum": ["DESY"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``DESY-15456``",
                      "pattern": "^DESY-\\d+$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "DESY identifier",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "schema": {
                      "enum": ["GOOGLESCHOLAR"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``AZUAeayXuibs``",
                      "pattern": "^(\\w|-){12}$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "Google Scholar profile identifier",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "description": "Record ID in the Virtual International Authority File (`VIAF\n<http://viaf.org>`_).",
                  "properties": {
                    "schema": {
                      "enum": ["VIAF"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``75121530``",
                      "pattern": "^\\d{7,9}$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "VIAF record ID",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "schema": {
                      "enum": ["RESEARCHERID"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``A-1009-2008``",
                      "pattern": "^[A-z]-\\d{4}-\\d{4}$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "ResearcherID",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "schema": {
                      "enum": ["SCOPUS"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``13245678901``",
                      "pattern": "^\\d{10,11}$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "SCOPUS author identifier",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "description": "HEPNAMES entry in the old SPIRES system.",
                  "properties": {
                    "schema": {
                      "enum": ["SPIRES"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: HEPNAMES-123456",
                      "pattern": "^HEPNAMES-\\d+$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "SPIRES HEPNAMES ID",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "schema": {
                      "enum": ["WIKIPEDIA"],
                      "type": "string"
                    },
                    "value": {
                      "description": "A page name on the English Wikipedia, i.e. the ``Page_name``\npart in http://en.wikipedia.org/wiki/Page_name.\n\n:example: ``Albert_Einstein``\n\nNon-English Wikipedia pages can be referenced by prepending the language.\n\n:example: ``it:Fabiola_Gianotti``",
                      "pattern": "^[\\w\\-':]+$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "Wikipedia Page_name of the person",
                  "type": "object"
                },
                {
                  "additionalProperties": false,
                  "properties": {
                    "schema": {
                      "enum": ["SLAC"],
                      "type": "string"
                    },
                    "value": {
                      "description": ":example: ``SLAC-123456``",
                      "pattern": "^SLAC-\\d+$",
                      "type": "string"
                    }
                  },
                  "required": ["schema", "value"],
                  "title": "SLAC identifier",
                  "type": "object"
                }
              ]
            },
            "title": "Identifiers of the author",
            "type": "array",
            "uniqueItems": true
          },
          "inspire_roles": {
            "items": {
              "default": "author",
              "description": "``supervisor``\n    :MARC: ``701`` is used for supervisor metadata.\n\n    This person is a thesis supervisor. Should be\n    used together with the ``thesis``\n    :ref:`hep.json#/properties/document_type`.\n\n``editor``\n    :MARC: ``100/700__e:ed.``\n\n    This person is an editor of the conference\n    proceedings. Should be used together with the\n    ``proceedings``\n    :ref:`hep.json#/properties/document_type`.",
              "enum": ["author", "supervisor", "editor"],
              "type": "string"
            },
            "type": "array"
          },
          "raw_affiliations": {
            "description": ":MARC: ``100/700/701__v``\n\nList of full affiliations, as written on the paper.",
            "items": {
              "additionalProperties": false,
              "description": "This is used to add, besides the `value`, the `source` where this value\ncame from.",
              "properties": {
                "source": {
                  "$schema": "http://json-schema.org/schema#",
                  "description": "Source of the information in this field. As several records can be merged,\nthis information allows us to remember where every bit of metadata came\nfrom and make decisions based on it.\n\n:MARC: Often not present.",
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": ["value"],
              "type": "object"
            },
            "type": "array",
            "uniqueItems": true
          },
          "record": {
            "$schema": "http://json-schema.org/schema#",
            "additionalProperties": false,
            "properties": {
              "$ref": {
                "description": "URL to the referenced resource",
                "format": "url",
                "type": "string"
              }
            },
            "required": ["$ref"],
            "title": "Reference to another record",
            "type": "object"
          },
          "signature_block": {
            "description": "Phonetic representation of the name, needed for author\ndisambiguation. This field should not be edited\nmanually.",
            "type": "string"
          },
          "uuid": {
            "description": "Used by the BEARD author disambiguation tool. This\nfield should not be edited manually.",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
            "title": "UUID",
            "type": "string"
          }
        },
        "required": ["full_name"],
        "type": "object"
      },
      "title": "Authors",
      "type": "array",
      "uniqueItems": true
    },
    "book_series": {
      "description": ":MARC: ``490``\n\nList of book series in which this record has been published.\n\n.. note::\n\n    This field should only be present if ``book``, ``thesis`` or\n    ``proceedings`` are among\n    :ref:`hep.json#/properties/document_type`.",
      "items": {
        "additionalProperties": false,
        "description": ".. note::\n\n    If the book series has a Journal record,\n    `hep.json#/properties/publication_info` should be used\n    instead.",
        "properties": {
          "title": {
            "description": ":MARC: ``490__a``",
            "title": "Title of the book series",
            "type": "string"
          },
          "volume": {
            "description": ":MARC: ``490__v``",
            "title": "Volume of the book in the series",
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "citeable": {
      "description": ":MARC: ``true`` corresponds to ``980__a:Citeable``.\n\nThe main effect of setting this field to ``true`` is that the\nrecoord is taken into account in the citation summary.  The need\nfor this field arises because of limitations in the automatic\nrecognition of cited papers in references: a record is flagged as\nciteable only if the common way to cite this record can be reliably\nrecognized.  Currently, a record is automatically flagged as\nciteable if it has\n\n- sufficient information in :ref:`publication_info`:\n    :ref:`publication_info/items/properties/journal_title`,\n    :ref:`publication_info/items/properties/journal_volume` and\n    (:ref:`publication_info/items/properties/artid` or\n    :ref:`publication_info/items/properties/page_start`), *or*\n- an :ref:`arxiv_eprints` field.\n\nBesides, a record may be manually flagged as citeable by a curator\nif a user tracks and reports citations to that record.",
      "title": "Whether this record should be considered as citeable",
      "type": "boolean"
    },
    "collaborations": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "record": {
            "$schema": "http://json-schema.org/schema#",
            "additionalProperties": false,
            "properties": {
              "$ref": {
                "description": "URL to the referenced resource",
                "format": "url",
                "type": "string"
              }
            },
            "required": ["$ref"],
            "title": "Reference to another record",
            "type": "object"
          },
          "value": {
            "description": ":MARC: ``710__g``\n\nCollaboration name as it appears on the paper (with the\n``Collaboration`` suffix dropped).\n\n:example: ``ATLAS`` instead of ``ATLAS Collaboration``\n:example: ``Particle Data Group``",
            "title": "Collaboration name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "required": ["value"],
      "title": "List of collaborations",
      "type": "array",
      "uniqueItems": true
    },
    "control_number": {
      "description": ":MARC: ``001``\n\nRead-only field.",
      "title": "ID of current record",
      "type": "integer"
    },
    "copyright": {
      "description": ":MARC: ``542``",
      "items": {
        "additionalProperties": false,
        "properties": {
          "holder": {
            "description": ":MARC: ``542__d``\n:example: ``American Physical Society``",
            "title": "Copyright holder",
            "type": "string"
          },
          "material": {
            "$schema": "http://json-schema.org/schema#",
            "enum": [
              "preprint",
              "publication",
              "reprint",
              "erratum",
              "addendum",
              "translation"
            ],
            "title": "Material to which the field refers",
            "type": "string"
          },
          "statement": {
            "description": ":MARC: ``542__f``\n\nSee `Wikipedia\n<https://en.wikipedia.org/wiki/Copyright_notice>`_ for\nexplanations.\n\nAlernatively to this string, a URL to the copyright\nnotice may be provided in :ref:`url`.\n\n:example: ``© The Author(s) 2015. Published by Oxford\n    University Press on behalf of the Physical Society\n    of Japan.``",
            "title": "Copyright notice",
            "type": "string"
          },
          "url": {
            "format": "url",
            "title": "Copyright notice URL",
            "type": "string"
          },
          "year": {
            "description": ":MARC: ``542__g``",
            "maximum": 2050,
            "minimum": 1000,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "title": "List of copyrights to documents in this record",
      "type": "array"
    },
    "core": {
      "description": "Inspire ingests metadata and creates records for many documents.\nSome of them are relevant for High-Energy Physics, wheareas others\nmight be only tangentially related.  In the first case, the record\nis said to be CORE, whereas in the second case it is non-core.\nCORE records are manually curated to ensure their metadata are up\nto Inspire's quality standards, but non-core records only receive\nautomatic treatment.\n\n.. note::\n\n    If this field is not present or set to ``false``, the record is\n    considered as non-core. The latter is useful to override\n    automatic core assignments based on other properties of the\n    record.",
      "title": "Whether this record is CORE",
      "type": "boolean"
    },
    "corporate_author": {
      "items": {
        "description": ":MARC: ``110__a``\n\nIn case the document has not been signed by a real author, but\nonly mentions the name of an organization.\n\n:example: ``CERN``",
        "title": "List of corporate authors",
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "deleted": {
      "description": ":MARC: ``980__a/c:deleted``",
      "title": "Whether this record has been deleted",
      "type": "boolean"
    },
    "deleted_records": {
      "description": ":MARC: ``981__a``\n\nList of records that were deleted because they were replaced by\nthis one. This typically happens when merging two records: one of\nthem gets enriched with the information of the other one, which is\nthen superfluous and gets deleted.\n\nFor the opposite concept, see :ref:`new_record`.",
      "items": {
        "$schema": "http://json-schema.org/schema#",
        "additionalProperties": false,
        "properties": {
          "$ref": {
            "description": "URL to the referenced resource",
            "format": "url",
            "type": "string"
          }
        },
        "required": ["$ref"],
        "title": "Reference to another record",
        "type": "object"
      },
      "type": "array"
    },
    "document_type": {
      "description": ":MARC: ``980__a``, with corresponding values.\n\nTypes of document this record represents.\n\n.. note::\n\n    As a record aggregates information from multiple sources, it\n    can have multiple document types simultaneously.\n\n``article``\n    An article, whether it is published or only a preprint. In the\n    first case, :ref:`publication_info` contains information about the\n    journal in which it was published.\n\n``book``\n    A monograph that does not fit into any other\n    :ref:`document_type`.  The :ref:`editions`, :ref:`imprints`,\n    :ref:`isbns` and :ref:`book_series` fields may contain specific\n    metadata about this book.\n\n    .. note::\n\n        A ``proceeding`` or a ``thesis`` is not considered as a ``book``.\n\n``book chapter``\n    A chapter in a book. The field :ref:`publication_info` contains\n    information about the book of which this record is a chapter.\n\n``conference paper``\n    A paper that part of a conference proceedings. The field\n    :ref:`publication_info` contain information about the\n    conference proceedings. In particular,\n    :ref:`publication_info/items/properties/cnum` contains the identifier\n    of the conference.\n\n``note``\n    A note, not meant for publication.\n\n``proceedings``\n    Proceedings of a conference. The\n    :ref:`publication_info/items/properties/cnum` field contains the\n    identfier of the conference. If published in a journal,\n    :ref:`publication_info` also contains the journal information.\n    If published as a book, the :ref:`editions`, :ref:`imprints`,\n    :ref:`isbns` and :ref:`book_series` fields may contain specific\n    metadata about this book.\n\n    .. note::\n\n        This is not considered as a ``book``.\n\n``report``\n    A report.\n\n``thesis``\n    A thesis. The :ref:`thesis_info` field contains additional\n    information about the thesis. If published as a book, the\n    :ref:`editions`, :ref:`imprints`, :ref:`isbns` and\n    :ref:`book_series` fields may contain specific metadata about\n    this book.\n\n    .. note::\n\n        This is not considered as a ``book``.",
      "items": {
        "$schema": "http://json-schema.org/schema#",
        "default": "article",
        "enum": [
          "activity report",
          "article",
          "book",
          "book chapter",
          "conference paper",
          "note",
          "proceedings",
          "report",
          "thesis"
        ],
        "type": "string"
      },
      "minItems": 1,
      "type": "array",
      "uniqueItems": true
    },
    "dois": {
      "items": {
        "additionalProperties": false,
        "properties": {
          "material": {
            "$schema": "http://json-schema.org/schema#",
            "enum": [
              "preprint",
              "publication",
              "reprint",
              "erratum",
              "addendum",
              "translation"
            ],
            "title": "Material to which the field refers",
            "type": "string"
          },
          "source": {
            "$schema": "http://json-schema.org/schema#",
            "description": "Source of the information in this field. As several records can be merged,\nthis information allows us to remember where every bit of metadata came\nfrom and make decisions based on it.\n\n:MARC: Often not present.",
            "type": "string"
          },
          "value": {
            "description": ":MARC: ``0247_a``\n:example: ``10.1023/A:1026654312961``",
            "pattern": "^10\\.\\d+(\\.\\d+)?/.+$",
            "title": "DOI",
            "type": "string"
          }
        },
        "required": ["value"],
        "type": "object"
      },
      "title": "List of DOIs",
      "type": "array",
      "uniqueItems": true
    },
    "editions": {
      "description": ":MARC: ``250__a``",
      "items": {
        "type": "string"
      },
      "title": "List of book editions",
      "type": "array",
      "uniqueItems": true
    },
    "energy_ranges": {
      "description": ":MARC: ``695__e``\n\nRanges of energies the record refers to.",
      "items": {
        "minimum": 0,
        "type": "integer"
      },
      "type": "array"
    },
    "external_system_identifiers": {
      "description": ":MARC: ``035``\n\nList of identifiers of this document on external systems.",
      "items": {
        "additionalProperties": false,
        "properties": {
          "schema": {
            "description": ":MARC: ``035__9``\n\nIdentifies the external system, and allows to interpret\nunambiguously the :ref:`value`.\n\n:example: ``ADS``",
            "type": "string"
          },
          "value": {
            "description": ":MARC: ``035__a``\n\nIdentifies the record in the external system specified\nby :ref:`schema`.\n\n:example: ``1999IJTP...38.1113M``",
            "title": "External identifier",
            "type": "string"
          }
        },
        "required": ["schema", "value"],
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "funding_info": {
      "description": ":MARC: ``536``\n\nInformation about the sources of funding for the research performed\nin this record.",
      "items": {
        "additionalProperties": false,
        "properties": {
          "agency": {
            "description": ":MARC: ``536__a``",
            "title": "Funding agency",
            "type": "string"
          },
          "grant_number": {
            "description": ":MARC: ``536__c``",
            "title": "Grant number",
            "type": "string"
          },
          "project_number": {
            "description": ":MARC: ``536__f``",
            "title": "Project number",
            "type": "string"
          }
        },
        "type": "object"
      },
      "title": "Funding information",
      "type": "array",
      "uniqueItems": true
    },
    "imprints": {
      "items": {
        "additionalProperties": false,
        "description": ":MARC: ``260``\n\nWhen/where/by whom this record was published.",
        "properties": {
          "date": {
            "description": ":MARC: ``260__c``",
            "format": "date",
            "title": "Date of publication",
            "type": "string"
          },
          "place": {
            "description": ":MARC: ``260__a``\n\n.. note::\n\n    This field is populated if this record has been\n    published in a book, i.e. it makes sense if ``book``,\n    ``thesis`` or ``proceedings`` are among\n    :ref:`hep.json#/properties/document_type`.\n\n:example: ``Paris``",
            "title": "Place of publication",
            "type": "string"
          },
          "publisher": {
            "description": ":MARC: ``260__b``\n:example: ``Springer``",
            "type": "string"
          }
        },
        "type": "object"
      },
      "title": "List of imprints",
      "type": "array",
      "uniqueItems": true
    },
    "inspire_categories": {
      "items": {
        "$schema": "http://json-schema.org/schema#",
        "additionalProperties": false,
        "description": ":MARC: ``65017`` with ``2:INSPIRE``\n\nThe Inspire category (also called field category) classifies the subject\nthis record is related to.  This classification schema is similar to the\narXiv one (see `elements/arxiv_categories.json`) and there is a way to map\nfrom arXiv categories to Inspire categories.",
        "properties": {
          "source": {
            "enum": ["curator", "magpie", "arxiv", "user", "undefined"],
            "type": "string"
          },
          "term": {
            "enum": [
              "Accelerators",
              "Astrophysics",
              "Computing",
              "Data Analysis and Statistics",
              "Experiment-HEP",
              "Experiment-Nucl",
              "General Physics",
              "Gravitation and Cosmology",
              "Instrumentation",
              "Lattice",
              "Math and Math Physics",
              "Other",
              "Phenomenology-HEP",
              "Theory-HEP",
              "Theory-Nucl"
            ],
            "type": "string"
          }
        },
        "title": "Inspire category",
        "type": "object"
      },
      "title": "List of Inspire categories",
      "type": "array",
      "uniqueItems": true
    },
    "isbns": {
      "description": ":MARC: ``020``",
      "items": {
        "additionalProperties": false,
        "properties": {
          "medium": {
            "description": ":MARC: ``020__b``",
            "enum": ["hardcover", "online", "print", "softcover"],
            "title": "Physical medium to which this ISBN refers",
            "type": "string"
          },
          "value": {
            "description": ":MARC: ``020__a``\n:example: ``0201021153``",
            "pattern": "^\\d*[0-9X]$",
            "type": "string"
          }
        },
        "required": ["value"],
        "type": "object"
      },
      "title": "List of ISBNs",
      "type": "array",
      "uniqueItems": true
    },
    "keywords": {
      "description": ":MARC: ``084``, ``6531`` and ``695`` (corresponding to different\n    :ref:`keywords/items/properties/schema`)\n\nKeywords give information about the specific contents of the\nrecord, much more precisely than :ref:`inspire_categories`.",
      "items": {
        "additionalProperties": false,
        "properties": {
          "schema": {
            "description": "Describes to which vocabulary the keyword in :ref:`value`\nbelongs.\n\n``INSPIRE``\n    :MARC: ``695__2:INSPIRE``\n\n    The keyword has been assigned by Inspire, and\n    belongs to its vocabulary.\n\n``JACOW``\n    :MARC: ``6531_2:JACOW``\n\n    The keyword is part of the `Joint Accelerator\n    Conference Website (JACoW) vocabulary\n    <http://jacow.org/Tools/Keywords>`_.\n\n``PACS``\n    :MARC: ``084__2:PACS``\n\n    The keyword is a number from the `Physics and\n    Astronomy Classification Scheme (PACS)\n    <https://publishing.aip.org/publishing/pacs/pacs-2010-regular-edition>`_.\n\n``PDG``\n    :MARC: ``084__2:PDG``\n\n    The keyword is a `PDG Indentifier\n    <http://pdg.lbl.gov/2016/pdgid/PDGIdentifiers.html>`_.\n\n.. note::\n\n    If not present, the keyword is a free-form keyword,\n    not necessarily part of any vocabulary.",
            "enum": ["INSPIRE", "JACOW", "PACS", "PDG"],
            "title": "Keyword vocabulary",
            "type": "string"
          },
          "source": {
            "$schema": "http://json-schema.org/schema#",
            "description": "Source of the information in this field. As several records can be merged,\nthis information allows us to remember where every bit of metadata came\nfrom and make decisions based on it.\n\n:MARC: Often not present.",
            "type": "string"
          },
          "value": {
            "description": ":MARC: ``084/6531/695__a`` (depending on :ref:`schema`)\n\nIt belongs to the vocabulary specified by :ref:`schema`.\n\n:example: ``black hole: mass`` (for :ref:`schema` =\n    ``INSPIRE``)\n:example: ``29.27.Fh`` (for :ref:`schema` = ``PACS``)\n:example: ``G033M`` (for :ref:`schema` = ``PDG``)",
            "title": "A keyword",
            "type": "string"
          }
        },
        "required": ["value"],
        "type": "object"
      },
      "title": "List of keywords",
      "type": "array",
      "uniqueItems": true
    },
    "languages": {
      "description": ":MARC: ``041__a``\n\nEvery language is represented by its `ISO 639-1\n<https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes>`_\ntwo-letter code.\n\n.. note::\n\n    If this field is not present, the language of the document is assumed to be English.\n\n:example: ``el`` for Greek",
      "items": {
        "pattern": "^\\w{2}$",
        "title": "A language",
        "type": "string"
      },
      "title": "List of languages of the document",
      "type": "array"
    },
    "legacy_creation_date": {
      "description": ":MARC: ``961__x``\n\nOnly present if the record already existed on legacy Inspire.",
      "format": "date-time",
      "title": "Date of record creation on legacy",
      "type": "string"
    },
    "license": {
      "description": ":MARC: ``540``",
      "items": {
        "additionalProperties": false,
        "properties": {
          "imposing": {
            "description": ":MARC: ``540__b``\n:example: ``arXiv``",
            "title": "Organization/person imposing the license",
            "type": "string"
          },
          "license": {
            "description": ":MARC: ``540__a``\n\nEither the short name of the license or the full\nlicense statement.\n\n:example: ``CC-BY-4.0``",
            "title": "License statement",
            "type": "string"
          },
          "material": {
            "$schema": "http://json-schema.org/schema#",
            "enum": [
              "preprint",
              "publication",
              "reprint",
              "erratum",
              "addendum",
              "translation"
            ],
            "title": "Material to which the field refers",
            "type": "string"
          },
          "url": {
            "description": ":MARC: ``540__u``\n\nURL where the full license statement may be found, if\nonly a short name is provided in ``license``.",
            "format": "url",
            "title": "URL of the license",
            "type": "string"
          }
        },
        "type": "object"
      },
      "title": "List of licenses",
      "type": "array",
      "uniqueItems": true
    },
    "new_record": {
      "$schema": "http://json-schema.org/schema#",
      "additionalProperties": false,
      "properties": {
        "$ref": {
          "description": "URL to the referenced resource",
          "format": "url",
          "type": "string"
        }
      },
      "required": ["$ref"],
      "title": "Reference to another record",
      "type": "object"
    },
    "number_of_pages": {
      "description": ":MARC: ``300``",
      "minimum": 1,
      "title": "Number of pages of the document",
      "type": "integer"
    },
    "persistent_identifiers": {
      "description": ":MARC: ``0247``",
      "items": {
        "additionalProperties": false,
        "properties": {
          "material": {
            "$schema": "http://json-schema.org/schema#",
            "enum": [
              "preprint",
              "publication",
              "reprint",
              "erratum",
              "addendum",
              "translation"
            ],
            "title": "Material to which the field refers",
            "type": "string"
          },
          "schema": {
            "description": ":MARC: ``0247_2``\n\nCurrently, the following identifiers are recognized:\n\n* `HDL <http://handle.net>`_\n* `URN\n  <https://en.wikipedia.org/wiki/Uniform_Resource_Name>`_\n\n.. note::\n\n    DOIs should be put into :ref:`hep.json#/properties/dois`, not here.\n\n    Although ISBNs can also be mapped to a URN (by\n    prepending ``urn:isbn:`` to the ISBN), they should\n    be put in the :ref:`hep.json#/properties/isbns` field instead.",
            "enum": ["HDL", "URN"],
            "title": "Type of identifier",
            "type": "string"
          },
          "source": {
            "$schema": "http://json-schema.org/schema#",
            "description": "Source of the information in this field. As several records can be merged,\nthis information allows us to remember where every bit of metadata came\nfrom and make decisions based on it.\n\n:MARC: Often not present.",
            "type": "string"
          },
          "value": {
            "description": ":MARC: ``0247_a``\n\nThis value gets interpreted as an identfier of the type\nspecified by :ref:`schema`.\n\n:example: ``10138/168995`` (when :ref:`schema` = ``HDL``)\n:example: ``urn:nbn:de:hebis:77-diss-1000009520`` (when\n    :ref:`schema` = ``URN``)",
            "title": "Persistent identifier",
            "type": "string"
          }
        },
        "required": ["schema", "value"],
        "type": "object"
      },
      "title": "List of persistent identifiers",
      "type": "array",
      "uniqueItems": true
    },
    "preprint_date": {
      "description": ":MARC: ``269__c``\n\n.. note::\n\n    This is only for preprints. For the publication date of\n    published documents, see :ref:`imprints`.",
      "format": "date",
      "title": "Preprint release date",
      "type": "string"
    },
    "public_notes": {
      "description": ":MARC: ``500``\n\nAny notes about the document that do not fit into another field.\nFor arXiv eprints, also contains the contents of the comment field\non arXiv.\n\n.. note::\n\n    These notes are publicly visible. For notes not shown to\n    regular users, see :ref:`_private_notes`.",
      "items": {
        "additionalProperties": false,
        "description": "This is used to add, besides the `value`, the `source` where this value\ncame from.",
        "properties": {
          "source": {
            "$schema": "http://json-schema.org/schema#",
            "description": "Source of the information in this field. As several records can be merged,\nthis information allows us to remember where every bit of metadata came\nfrom and make decisions based on it.\n\n:MARC: Often not present.",
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["value"],
        "type": "object"
      },
      "title": "List of public notes",
      "type": "array",
      "uniqueItems": true
    },
    "publication_info": {
      "description": ":MARC: ``773``",
      "items": {
        "additionalProperties": false,
        "properties": {
          "artid": {
            "description": ":MARC: ``773__c`` (when it contains an ID instead of\n    starting page or page range).\n\nFor journals which issue IDs for articles instead of\n(or in complement to) continuous numbers within a\nvolume.\n\n.. note::\n\n    On legacy, this was treated as a starting page.",
            "title": "Article ID",
            "type": "string"
          },
          "cnum": {
            "$schema": "http://json-schema.org/schema#",
            "description": "The CNUM is based on the starting day of the conference, with an extra\nnumber appended to distinguish conferences starting on the first day.\n\n:example: The first conference (in order of creation on Inspire) starting\n    on December 25, 1987 has CNUM ``C87-12-25`` whereas, say, the third\n    one, has CNUM ``C87-12-25.2``",
            "pattern": "^C\\d\\d-\\d\\d-\\d\\d(\\.\\d+)?$",
            "title": "CNUM identifier of the conference",
            "type": "string"
          },
          "conf_acronym": {
            "description": ":MARC: ``773__q``",
            "title": "Conference acronym",
            "type": "string"
          },
          "conference_record": {
            "$schema": "http://json-schema.org/schema#",
            "additionalProperties": false,
            "properties": {
              "$ref": {
                "description": "URL to the referenced resource",
                "format": "url",
                "type": "string"
              }
            },
            "required": ["$ref"],
            "title": "Reference to another record",
            "type": "object"
          },
          "curated_relation": {
            "type": "boolean"
          },
          "journal_issue": {
            "description": ":MARC: ``773__n``",
            "type": "string"
          },
          "journal_record": {
            "$schema": "http://json-schema.org/schema#",
            "additionalProperties": false,
            "properties": {
              "$ref": {
                "description": "URL to the referenced resource",
                "format": "url",
                "type": "string"
              }
            },
            "required": ["$ref"],
            "title": "Reference to another record",
            "type": "object"
          },
          "journal_title": {
            "description": ":MARC: ``773__p``\n\nJournal title abbreviated as in the corresponding entry\nin the Journals collection.\n\n:example: ``Phys.Rev.``",
            "type": "string"
          },
          "journal_volume": {
            "description": ":MARC: ``773__v``",
            "type": "string"
          },
          "material": {
            "$schema": "http://json-schema.org/schema#",
            "enum": [
              "preprint",
              "publication",
              "reprint",
              "erratum",
              "addendum",
              "translation"
            ],
            "title": "Material to which the field refers",
            "type": "string"
          },
          "page_end": {
            "description": ":MARC: last page in ``773__c`` (if present)",
            "title": "Last page of document",
            "type": "string"
          },
          "page_start": {
            "description": ":MARC: first page in ``773__c`` (if not an :ref:`artid`)",
            "title": "First page of document",
            "type": "string"
          },
          "parent_isbn": {
            "description": ":MARC: ``773__z``\n\nISBN of the book of which this document is a part.",
            "pattern": "^(97(8|9))?\\d{9}(\\d|X)$",
            "type": "string"
          },
          "parent_record": {
            "$schema": "http://json-schema.org/schema#",
            "additionalProperties": false,
            "properties": {
              "$ref": {
                "description": "URL to the referenced resource",
                "format": "url",
                "type": "string"
              }
            },
            "required": ["$ref"],
            "title": "Reference to another record",
            "type": "object"
          },
          "parent_report_number": {
            "description": ":MARC: ``773__r``\n\nReport number of the document of which this record is a\npart. This applies e.g. for large reports containing\nseveral chapters that have been split into individual\nrecords.",
            "type": "string"
          },
          "pubinfo_freetext": {
            "description": ":MARC: ``773__x``\n\nUnstructured text describing the publication\ninformation.\n\n.. note::\n\n    This field is used when provided with unstructured\n    publication information, e.g. from arXiv. If known,\n    the other fields should be used instead.",
            "type": "string"
          },
          "year": {
            "description": ":MARC: ``773__y``",
            "maximum": 2050,
            "minimum": 1000,
            "title": "Publication year",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "title": "List of information on publication",
      "type": "array",
      "uniqueItems": true
    },
    "publication_type": {
      "items": {
        "enum": ["introductory", "lectures", "review"],
        "type": "string"
      },
      "type": "array"
    },
    "refereed": {
      "description": ":MARC: ``true`` corresponds to ``980__a:published``\n\nThis asserts that the document is considered as peer reviewed. This\nassessment might differ from the journal's claim to do peer review.\nAs a consequence, most conference papers are not considered as\nrefereed.",
      "title": "Whether the record has been peer reviewed",
      "type": "boolean"
    },
    "references": {
      "description": ":MARC: ``999C5``",
      "items": {
        "additionalProperties": false,
        "properties": {
          "curated_relation": {
            "type": "boolean"
          },
          "raw_refs": {
            "description": ":MARC: ``999C5x``\n\nThese references are unparsed and as they appear in the\ndocument.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "schema": {
                  "description": ":example: ``text``\n:example: ``Elsevier XML``",
                  "title": "Content type of the raw reference",
                  "type": "string"
                },
                "source": {
                  "$schema": "http://json-schema.org/schema#",
                  "description": "Source of the information in this field. As several records can be merged,\nthis information allows us to remember where every bit of metadata came\nfrom and make decisions based on it.\n\n:MARC: Often not present.",
                  "type": "string"
                },
                "value": {
                  "title": "Content of the raw reference",
                  "type": "string"
                }
              },
              "required": ["value", "schema"],
              "type": "object"
            },
            "title": "List of raw references",
            "type": "array"
          },
          "record": {
            "$schema": "http://json-schema.org/schema#",
            "additionalProperties": false,
            "properties": {
              "$ref": {
                "description": "URL to the referenced resource",
                "format": "url",
                "type": "string"
              }
            },
            "required": ["$ref"],
            "title": "Reference to another record",
            "type": "object"
          },
          "reference": {
            "$schema": "http://json-schema.org/schema#",
            "additionalProperties": false,
            "description": "This is structurally very similar to a Literature record, with unnecessary\nfields removed.  For more information about the meaning of the different\nfields, see the corresponding field in :ref:`hep.json#/`.",
            "properties": {
              "arxiv_eprint": {
                "description": ":MARC: ``999C5r`` with ``arXiv:`` prefix\n:example: ``1703.07274``",
                "pattern": "^\\d{4}.\\d{4,5}|[\\w.]+(-[\\w.]+)?/\\d+$",
                "title": "arXiv eprint number",
                "type": "string"
              },
              "authors": {
                "description": ":MARC: ``999C5h`` contains a comma-separated string with all\n    authors, in ``first_name last_name`` order.",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "full_name": {
                      "description": "Should be of the same form as\n:ref:`hep.json#/properties/authors/items/properties/full_name`.\n\n:example: ``Smith, John G.D.``",
                      "type": "string"
                    },
                    "inspire_role": {
                      "description": ":MARC: ``999C5e`` for ``editor``",
                      "enum": ["author", "supervisor", "editor"],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "title": "List of authors",
                "type": "array",
                "uniqueItems": true
              },
              "book_series": {
                "additionalProperties": false,
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "volume": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "collaborations": {
                "items": {
                  "description": ":MARC: ``999C5c``",
                  "type": "string"
                },
                "type": "array",
                "uniqueItems": true
              },
              "document_type": {
                "$schema": "http://json-schema.org/schema#",
                "default": "article",
                "enum": [
                  "activity report",
                  "article",
                  "book",
                  "book chapter",
                  "conference paper",
                  "note",
                  "proceedings",
                  "report",
                  "thesis"
                ],
                "type": "string"
              },
              "dois": {
                "items": {
                  "description": ":MARC: ``999C5a`` with prefix ``doi:``",
                  "pattern": "^10\\.\\d+(\\.\\d+)?/.+$",
                  "type": "string"
                },
                "type": "array",
                "uniqueItems": true
              },
              "imprint": {
                "additionalProperties": false,
                "properties": {
                  "date": {
                    "format": "date",
                    "type": "string"
                  },
                  "place": {
                    "type": "string"
                  },
                  "publisher": {
                    "description": ":MARC: ``999C5p``",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "isbn": {
                "description": ":MARC: ``999C5i``\n\nISBN if the cited document is a book.\n\n.. note::\n\n    If the cited document is a book chapter, use\n    :ref:`publication_info/properties/parent_isbn` instead.",
                "pattern": "^\\d*[0-9X]$",
                "type": "string"
              },
              "label": {
                "description": ":MARC: ``999C5o``\n\nLabel used to refer to the reference in the main text, and put in\nfront of the reference in the reference list. Often, this is a\nnumber, found in square brackets. These brackets (or parentheses),\nif present, should not be put here.\n\n:example: ``42``\n:example: ``Jones1995c``",
                "type": "string"
              },
              "misc": {
                "description": ":MARC: ``999C5m``\n\nUnrecognized information from the reference.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "persistent_identifiers": {
                "description": ":MARC: ``999C5a`` (with prefix ``hdl:`` or ``urn:``)",
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "schema": {
                      "enum": ["HDL", "URN"],
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array",
                "uniqueItems": true
              },
              "publication_info": {
                "additionalProperties": false,
                "properties": {
                  "artid": {
                    "description": ":MARC: last part of ``999C5s`` (if not a page)",
                    "type": "string"
                  },
                  "cnum": {
                    "$schema": "http://json-schema.org/schema#",
                    "description": "The CNUM is based on the starting day of the conference, with an extra\nnumber appended to distinguish conferences starting on the first day.\n\n:example: The first conference (in order of creation on Inspire) starting\n    on December 25, 1987 has CNUM ``C87-12-25`` whereas, say, the third\n    one, has CNUM ``C87-12-25.2``",
                    "pattern": "^C\\d\\d-\\d\\d-\\d\\d(\\.\\d+)?$",
                    "title": "CNUM identifier of the conference",
                    "type": "string"
                  },
                  "journal_issue": {
                    "description": ":MARC: ``999C5n``",
                    "type": "string"
                  },
                  "journal_title": {
                    "description": ":MARC: first part of ``999C5s``",
                    "type": "string"
                  },
                  "journal_volume": {
                    "description": ":MARC: second part of ``999C5s``",
                    "type": "string"
                  },
                  "material": {
                    "$schema": "http://json-schema.org/schema#",
                    "enum": [
                      "preprint",
                      "publication",
                      "reprint",
                      "erratum",
                      "addendum",
                      "translation"
                    ],
                    "title": "Material to which the field refers",
                    "type": "string"
                  },
                  "page_end": {
                    "description": ":MARC: Last part of ``999C5s`` (if page-range)",
                    "type": "string"
                  },
                  "page_start": {
                    "description": ":MARC: Last part of ``999C5s`` (if not article ID)",
                    "type": "string"
                  },
                  "parent_isbn": {
                    "description": ":MARC: ``999C5i``, but not distinguished from\n    the :ref:`reference.json#/properties/isbn` of the\n    cited document.\n\nIf the cited document is a book chapter, this is the ISBN\nof the book.",
                    "pattern": "^\\d*[0-9X]$",
                    "type": "string"
                  },
                  "parent_report_number": {
                    "description": ":MARC: ``999C5r`` but not distinguished from the cited\n    document :ref:`reference.json#/properties/report_number`.",
                    "type": "string"
                  },
                  "parent_title": {
                    "description": ":MARC: ``999C5q``\n\nTitle of the parent document, e.g. title of the book if the\ncited document is a book chapter.",
                    "type": "string"
                  },
                  "year": {
                    "description": ":MARC: ``999C5y``",
                    "maximum": 2050,
                    "minimum": 1000,
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "report_number": {
                "description": ":MARC: ``999C5r``\n\n.. note::\n\n    If the cited document is only part of a report, use\n    :ref:`publication_info/properties/parent_report_number` instead.",
                "type": "string"
              },
              "texkey": {
                "description": ":MARC: ``999C5k``\n\nKey that was used for this citation in the document. This may be\nextracted if the document is a PDF generated from a LaTeX, and\npossibly coincides with the one of the\n:ref:`hep.json#/properties/texkeys` assigned to the cited document\nby Inspire and made visible in the TeX export formats.\n\n:example: ``Maldacena:1997re``",
                "type": "string"
              },
              "title": {
                "$schema": "http://json-schema.org/schema#",
                "additionalProperties": false,
                "properties": {
                  "source": {
                    "type": "string"
                  },
                  "subtitle": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "urls": {
                "items": {
                  "$schema": "http://json-schema.org/schema#",
                  "additionalProperties": false,
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "value": {
                      "format": "url",
                      "type": "string"
                    }
                  },
                  "title": "URL of related document",
                  "type": "object"
                },
                "type": "array",
                "uniqueItems": true
              }
            },
            "title": "A reference to a cited document",
            "type": "object"
          }
        },
        "type": "object"
      },
      "title": "List of references",
      "type": "array",
      "uniqueItems": true
    },
    "report_numbers": {
      "description": ":MARC: ``037``\n:example: ``DESY-17-036``",
      "items": {
        "additionalProperties": false,
        "properties": {
          "hidden": {
            "description": ":MARC: if ``true``, the :ref:`value` is in ``037__z``\n    instead of ``037__a``.\n\nWhether this report number should be hidden from the\ndisplay. This is appropriate for:\n\n* a report number that appears on the document but is\n  not the one officially assigned;\n* a report number that has been assigned by one of the\n  authors' institutions, but is not displayed on the\n  document (typically for large collaborations).",
            "type": "boolean"
          },
          "source": {
            "$schema": "http://json-schema.org/schema#",
            "description": "Source of the information in this field. As several records can be merged,\nthis information allows us to remember where every bit of metadata came\nfrom and make decisions based on it.\n\n:MARC: Often not present.",
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["value"],
        "type": "object"
      },
      "title": "List of report numbers assigned to the record",
      "type": "array",
      "uniqueItems": true
    },
    "self": {
      "$schema": "http://json-schema.org/schema#",
      "additionalProperties": false,
      "properties": {
        "$ref": {
          "description": "URL to the referenced resource",
          "format": "url",
          "type": "string"
        }
      },
      "required": ["$ref"],
      "title": "Reference to another record",
      "type": "object"
    },
    "special_collections": {
      "description": ":MARC: ``980__a``\n\nThese collections are used by collaborations to manage their notes.\nIf a record belongs to a special collection, it is not shown in the\nstandard search results.",
      "items": {
        "enum": [
          "CDF-INTERNAL-NOTE",
          "CDF-NOTE",
          "D0-INTERNAL-NOTE",
          "D0-PRELIMINARY-NOTE",
          "H1-INTERNAL-NOTE",
          "H1-PRELIMINARY-NOTE",
          "HALHIDDEN",
          "HEPHIDDEN",
          "HERMES-INTERNAL-NOTE",
          "LARSOFT-INTERNAL-NOTE",
          "LARSOFT-NOTE",
          "ZEUS-INTERNAL-NOTE",
          "ZEUS-PRELIMINARY-NOTE"
        ],
        "type": "string"
      },
      "title": "Special collections to which this record belongs",
      "type": "array",
      "uniqueItems": true
    },
    "succeeding_entry": {
      "additionalProperties": false,
      "description": ":MARC: ``78502``",
      "properties": {
        "isbn": {
          "pattern": "^(97(8|9))?\\d{9}(\\d|X)$",
          "type": "string"
        },
        "record": {
          "$schema": "http://json-schema.org/schema#",
          "additionalProperties": false,
          "properties": {
            "$ref": {
              "description": "URL to the referenced resource",
              "format": "url",
              "type": "string"
            }
          },
          "required": ["$ref"],
          "title": "Reference to another record",
          "type": "object"
        },
        "relationship_code": {
          "type": "string"
        }
      },
      "title": "Reference to a newer version of this record",
      "type": "object"
    },
    "texkeys": {
      "description": ":MARC: ``035`` with ``9:SPIRESTeX`` or ``9:INSPIRETeX``\n\nThese keys are used to cite this record using TeX/LaTeX/BibTex. The\nfirst one is the valid one being shown in the TeX display formats,\nthe others are the obsolete ones which are kept in order to\nidentify this record by those texkeys.",
      "items": {
        "type": "string"
      },
      "title": "List of TeX keys",
      "type": "array",
      "uniqueItems": true
    },
    "thesis_info": {
      "additionalProperties": false,
      "description": ":MARC: ``502``\n\nInformation on a thesis (degree, date, university)",
      "properties": {
        "date": {
          "description": ":MARC: ``502__d``\n\nPublication date of the thesis",
          "format": "date",
          "type": "string"
        },
        "defense_date": {
          "description": ":MARC: ``500__a``\n\nDate of the thesis defense. On legacy, this was put in the\nnote field as 'presented on ...'.",
          "format": "date",
          "type": "string"
        },
        "degree_type": {
          "$schema": "http://json-schema.org/schema#",
          "description": "The `other` value means that the degree type is not known or is not among\nthe more specific values.",
          "enum": [
            "other",
            "diploma",
            "bachelor",
            "laurea",
            "master",
            "phd",
            "habilitation"
          ],
          "title": "Academic degree type",
          "type": "string"
        },
        "institutions": {
          "description": ":MARC: ``502__c``\n\nList of institutions issuing the degree.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "curated_relation": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "record": {
                "$schema": "http://json-schema.org/schema#",
                "additionalProperties": false,
                "properties": {
                  "$ref": {
                    "description": "URL to the referenced resource",
                    "format": "url",
                    "type": "string"
                  }
                },
                "required": ["$ref"],
                "title": "Reference to another record",
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "title_translations": {
      "description": ":MARC: ``242``\n\nTranslations of the titles in a language that is not the language\nof the document (see :ref:`languages`).\nUsually, this is contains an English translation of the title of a\nnon-English paper, but sometimes a native language if the paper is\nin English but the title has been translated.",
      "items": {
        "additionalProperties": false,
        "properties": {
          "language": {
            "pattern": "^\\w{2}$",
            "type": "string"
          },
          "source": {
            "$schema": "http://json-schema.org/schema#",
            "description": "Source of the information in this field. As several records can be merged,\nthis information allows us to remember where every bit of metadata came\nfrom and make decisions based on it.\n\n:MARC: Often not present.",
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "titles": {
      "description": ":MARC: ``245``\n\nThere can be several because the preprint title often differs from\nthe published version. The title should be kept as on the document\nand in the same language as the document (see :ref:`languages`).\n\nTranslations go into :ref:`title_translations`.",
      "items": {
        "$schema": "http://json-schema.org/schema#",
        "additionalProperties": false,
        "properties": {
          "source": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "title": "List of titles",
      "type": "array",
      "uniqueItems": true
    },
    "urls": {
      "items": {
        "$schema": "http://json-schema.org/schema#",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string"
          },
          "value": {
            "format": "url",
            "type": "string"
          }
        },
        "title": "URL of related document",
        "type": "object"
      },
      "type": "array",
      "uniqueItems": true
    },
    "withdrawn": {
      "description": ":MARC: ``true`` corresponds to ``980__a:withdrawn``\n\nWhether the paper has been withdrawn (mainly occurs for arXiv\npreprints). It shouldn't appear in author profiles.",
      "type": "boolean"
    }
  },
  "required": ["document_type", "titles"],
  "title": "A record in the Literature collection",
  "type": "object"
}
